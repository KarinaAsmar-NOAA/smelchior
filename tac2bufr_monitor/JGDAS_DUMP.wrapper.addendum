# This section onward is for tac2bfr monitor cron
cyc=00
PDY=20141105
DATAROOT=/ptmpp1/$USER/tac2bfr_cron
cd $DATAROOT
# find the directory that was just generated by the JGDAS_DUMP run
datadir=$(ls -ltr | tail -n1 | cut -d':' -f2 | cut -d' ' -f2)
echo $datadir
datadir=${DATAROOT}/${datadir}
cd $datadir
bufrd=gdas1.t${cyc}z.aircft.tm00.bufr_d
com=com/gfs/prod/gdas.${PDY}

# Do a quick bufr inventory on NC004003 and NC004103
echo "---- BINV ----"
which binv
binv $datadir/${com}/${bufrd}

# Run gsb to split bufr_d file into contituents
# gsb /com/gfs/prod/gdas.${PDY}/gdas1.t${cyc}z.aircft.tm00.bufr_d
# output writes to /stmpp1/$USER/sb

which gsb
gsb $datadir/${com}/${bufrd}
cp /stmpp1/$USER/sb/split_NC004003 $datadir/${com}/NC004003.${PDY}${cyc}
cp /stmpp1/$USER/sb/split_NC004103 $datadir/${com}/NC004103.${PDY}${cyc}

# Run ue on split_NC004003 to list out ACID
# ue /stmpp1/Shelley.Melchior/sb/split_NC004003 "ACID | " quiet
# output writes to cwd/ufbtab_example.out

cd $datadir/${com}
which ue
ue NC004003.${PDY}${cyc} "ACID | " quiet
cp ufbtab_example.out NC004003.${PDY}${cyc}.ue.out
cat NC004003.${PDY}${cyc}.ue.out | cut -d')' -f2 > NC004003.${PDY}${cyc}.ue.out.stripped

# Run ue on split_NC004103 to list out ACID
# ue /stmpp1/Shelley.Melchior/sb/split_NC004103 "ACID | " quiet
# output writes to cwd/ufbtab_example.out

ue $datadir/${com}/NC004103.${PDY}${cyc} "ACID | " quiet
cp ufbtab_example.out NC004103.${PDY}${cyc}.ue.out
cat NC004103.${PDY}${cyc}.ue.out | cut -d')' -f2 > NC004103.${PDY}${cyc}.ue.out.stripped
# This resultant file is garbeldy gook.  I am going to have to run
# listdumps.sh on the gsb output file, NC004103.${PDY}${cyc}, and parse the
# listdumps output ...

# parse through ufbtab_example.out to gather report counts
# tank: NC004003
fileroot=NC004003.${PDY}${cyc}
# AFZA
grep AFZA ${fileroot}.ue.out.stripped > ${fileroot}.AFZA
ttlcnt=$(grep AFZA ${fileroot}.AFZA | wc -l)
echo "Total AFZA reports: $ttlcnt" >> ${fileroot}.AFZA
unq=$(expr $(grep AFZA ${fileroot}.AFZA | sort | uniq | wc -l) - 1)
echo "Total AFZA unique IDs: $unq" >> ${fileroot}.AFZA
zero=$(grep AFZA0 ${fileroot}.AFZA | wc -l)
echo "Total AFZA0* reports:" $zero >> ${fileroot}.AFZA
one=$(grep AFZA1 ${fileroot}.AFZA | wc -l)
echo "Total AFZA1* reports:" $one >> ${fileroot}.AFZA
two=$(grep AFZA2 ${fileroot}.AFZA | wc -l)
echo "Total AFZA2* reports:" $two >> ${fileroot}.AFZA
three=$(grep AFZA3 ${fileroot}.AFZA | wc -l)
echo "Total AFZA3* reports:" $three >> ${fileroot}.AFZA
four=$(grep AFZA4 ${fileroot}.AFZA | wc -l)
echo "Total AFZA4* reports:" $four >> ${fileroot}.AFZA
five=$(grep AFZA5 ${fileroot}.AFZA | wc -l)
echo "Total AFZA5* reports:" $five >> ${fileroot}.AFZA
six=$(grep AFZA6 ${fileroot}.AFZA | wc -l)
echo "Total AFZA6* reports:" $six >> ${fileroot}.AFZA
seven=$(grep AFZA7 ${fileroot}.AFZA | wc -l)
echo "Total AFZA7* reports:" $seven >> ${fileroot}.AFZA
eight=$(grep AFZA8 ${fileroot}.AFZA | wc -l)
echo "Total AFZA8* reports:" $eight >> ${fileroot}.AFZA
nine=$(grep AFZA9 ${fileroot}.AFZA | wc -l)
echo "Total AFZA9* reports:" $nine >> ${fileroot}.AFZA
# AU
grep AU ${fileroot}.ue.out.stripped > ${fileroot}.AU
ttlcnt=$(grep AU ${fileroot}.AU | wc -l)
echo "Total AU reports: $ttlcnt" >> ${fileroot}.AU
unq=$(expr $(grep AU ${fileroot}.AU | sort | uniq | wc -l) - 1)
echo "Total AU unique IDs: $unq" >> ${fileroot}.AU
zero=$(grep AU00 ${fileroot}.AU | wc -l)
echo "Total AU00* reports:" $zero >> ${fileroot}.AU
one=$(grep AU01 ${fileroot}.AU | wc -l)
echo "Total AU01* reports:" $one >> ${fileroot}.AU
# CNC
grep CNC ${fileroot}.ue.out.stripped > ${fileroot}.CNC
ttlcnt=$(grep CNC ${fileroot}.CNC | wc -l)
echo "Total CNC reports: $ttlcnt" >> ${fileroot}.CNC
unq=$(expr $(grep CNC ${fileroot}.CNC | sort | uniq | wc -l) - 1)
echo "Total CNC unique IDs: $unq" >> ${fileroot}.CNC
ovm=$(grep CNCOVM ${fileroot}.CNC | wc -l)
echo "Total CNCOVM reports:" $ovm >> ${fileroot}.CNC
ovl=$(grep CNCOVL ${fileroot}.CNC | wc -l)
echo "Total CNCOVL reports:" $ovl >> ${fileroot}.CNC
mvt=$(grep CNCMVT ${fileroot}.CNC | wc -l)
echo "Total CNCMVT reports:" $mvt >> ${fileroot}.CNC
mts=$(grep CNCMTS ${fileroot}.CNC | wc -l)
echo "Total CNCMTS reports:" $mts >> ${fileroot}.CNC
svn=$(grep CNCSVN ${fileroot}.CNC | wc -l)
echo "Total CNCSVN reports:" $svn >> ${fileroot}.CNC
# CNF
grep CNF ${fileroot}.ue.out.stripped > ${fileroot}.CNF
ttlcnt=$(grep CNF ${fileroot}.CNF | wc -l)
echo "Total CNF reports: $ttlcnt" >> ${fileroot}.CNF
unq=$(expr $(grep CNF ${fileroot}.CNF | sort | uniq | wc -l) - 1)
echo "Total CNF unique IDs: $unq" >> ${fileroot}.CNF
el=$(grep CNFL ${fileroot}.CNF | wc -l)
echo "Total CNFL* reports:" $el >> ${fileroot}.CNF
em=$(grep CNFM ${fileroot}.CNF | wc -l)
echo "Total CNFM* reports:" $em >> ${fileroot}.CNF
en=$(grep CNFN ${fileroot}.CNF | wc -l)
echo "Total CNFN* reports:" $en >> ${fileroot}.CNF
oh=$(grep CNFO ${fileroot}.CNF | wc -l)
echo "Total CNFO* reports:" $oh >> ${fileroot}.CNF
pee=$(grep CNFP ${fileroot}.CNF | wc -l)
echo "Total CNFP* reports:" $pee >> ${fileroot}.CNF
que=$(grep CNFQ ${fileroot}.CNF | wc -l)
echo "Total CNFQ* reports:" $que >> ${fileroot}.CNF
are=$(grep CNFR ${fileroot}.CNF | wc -l)
echo "Total CNFR* reports:" $are >> ${fileroot}.CNF
# EU
grep EU ${fileroot}.ue.out.stripped > ${fileroot}.EU
ttlcnt=$(grep EU ${fileroot}.EU | wc -l)
echo "Total EU reports: $ttlcnt" >> ${fileroot}.EU
unq=$(expr $(grep EU ${fileroot}.EU | sort | uniq | wc -l) - 1)
echo "Total EU unique IDs: $unq" >> ${fileroot}.EU
zero=$(grep EU0 ${fileroot}.EU | wc -l)
echo "Total EU0* reports:" $zero >> ${fileroot}.EU
one=$(grep EU1 ${fileroot}.EU | wc -l)
echo "Total EU1* reports:" $one >> ${fileroot}.EU
two=$(grep EU2 ${fileroot}.EU | wc -l)
echo "Total EU2* reports:" $two >> ${fileroot}.EU
three=$(grep EU3 ${fileroot}.EU | wc -l)
echo "Total EU3* reports:" $three >> ${fileroot}.EU
four=$(grep EU4 ${fileroot}.EU | wc -l)
echo "Total EU4* reports:" $four >> ${fileroot}.EU
five=$(grep EU5 ${fileroot}.EU | wc -l)
echo "Total EU5* reports:" $five >> ${fileroot}.EU
six=$(grep EU6 ${fileroot}.EU | wc -l)
echo "Total EU6* reports:" $six >> ${fileroot}.EU
seven=$(grep EU7 ${fileroot}.EU | wc -l)
echo "Total EU7* reports:" $seven >> ${fileroot}.EU
eight=$(grep EU8 ${fileroot}.EU | wc -l)
echo "Total EU8* reports:" $eight >> ${fileroot}.EU
nine=$(grep EU9 ${fileroot}.EU | wc -l)
echo "Total EU9* reports:" $nine >> ${fileroot}.EU
# JP
grep JP ${fileroot}.ue.out.stripped > ${fileroot}.JP
ttlcnt=$(grep JP ${fileroot}.JP | wc -l)
echo "Total JP reports: $ttlcnt" >> ${fileroot}.JP
unq=$(expr $(grep JP ${fileroot}.JP | sort | uniq | wc -l) - 1)
echo "Total JP unique IDs: $unq" >> ${fileroot}.JP
four=$(grep JP9Z4 ${fileroot}.JP | wc -l)
echo "Total JP9Z4* reports:" $four >> ${fileroot}.JP
five=$(grep JP9Z5 ${fileroot}.JP | wc -l)
echo "Total JP9Z5* reports:" $five >> ${fileroot}.JP
eight=$(grep JP9Z8 ${fileroot}.JP | wc -l)
echo "Total JP9Z8* reports:" $eight >> ${fileroot}.JP
vee=$(grep JP9ZV ${fileroot}.JP | wc -l)
echo "Total JP9ZV* reports:" $vee >> ${fileroot}.JP
ex=$(grep JP9ZX ${fileroot}.JP | wc -l)
echo "Total JP9ZX* reports:" $ex >> ${fileroot}.JP
# NZL
grep NZL ${fileroot}.ue.out.stripped > ${fileroot}.NZL
ttlcnt=$(grep NZL ${fileroot}.NZL | wc -l)
echo "Total NZL reports: $ttlcnt" >> ${fileroot}.NZL
unq=$(expr $(grep NZL ${fileroot}.NZL | sort | uniq | wc -l) - 1)
echo "Total NZL unique IDs: $unq" >> ${fileroot}.NZL
zero=$(grep NZL00 ${fileroot}.NZL | wc -l)
echo "Total NZL00* reports:" $zero >> ${fileroot}.NZL
one=$(grep NZL01 ${fileroot}.NZL | wc -l)
echo "Total NZL01* reports:" $one >> ${fileroot}.NZL
two=$(grep NZL02 ${fileroot}.NZL | wc -l)
echo "Total NZL02* reports:" $two >> ${fileroot}.NZL
three=$(grep NZL03 ${fileroot}.NZL | wc -l)
echo "Total NZL03* reports:" $three >> ${fileroot}.NZL
four=$(grep NZL04 ${fileroot}.NZL | wc -l)
echo "Total NZL04* reports:" $four >> ${fileroot}.NZL
five=$(grep NZL05 ${fileroot}.NZL | wc -l)
echo "Total NZL05* reports:" $five >> ${fileroot}.NZL
six=$(grep NZL06 ${fileroot}.NZL | wc -l)
echo "Total NZL06* reports:" $six >> ${fileroot}.NZL
seven=$(grep NZL07 ${fileroot}.NZL | wc -l)
echo "Total NZL07* reports:" $seven >> ${fileroot}.NZL
eight=$(grep NZL08 ${fileroot}.NZL | wc -l)
echo "Total NZL08* reports:" $eight >> ${fileroot}.NZL
nine=$(grep NZL09 ${fileroot}.NZL | wc -l)
echo "Total NZL09* reports:" $nine >> ${fileroot}.NZL

echo "---- DONE ----"
